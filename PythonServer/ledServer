#!/usr/bin/env python

import socket
import sys
# import serial
import thread

username = "Ilya"
password = "4592"

# ser = serial.Serial(
#     port='/dev/ttyAMA0',
#     baudrate=9600
# )


def connection_handler(connection):
    global ser, username, password
    try:
        received = 0
        while received >= 0:
            received = connection.recv(200)
            if not received:
                print "socket closed"
                return
            print '\r\n\r\nreceived: ' + received
            message_array = received.splitlines()
            print "lines " + str(len(message_array))
            for line in message_array:
                print "line " + line
            for message in message_array:
                print "processing: " + message
                string_array = message.split(';')
                if len(string_array) != 4:
                    print("Received wrong number of arguments\r\n" +
                          "Expected 4, got " + str(len(string_array)))
                    continue

                # verify username & password
                if string_array[0] != username or string_array[1] != password:
                    # connection.close()
                    print "wrong username or password"
                    print string_array[0]
                    print string_array[1]
                    #return

                # process command
                if string_array[2] == "SET_LED_R":
                    #ser.write(str(unichr(48 + int(string_array[3]))))
                    print "setting red"
                elif string_array[2] == "SET_LED_G":
                    #ser.write(str(unichr(65 + int(string_array[3]))))
                    print "setting green"
                elif string_array[2] == "SET_LED_B":
                    #ser.write(str(unichr(97 + int(string_array[3]))))
                    print "setting blue"
                else:
                    print("Wrong command\r\n" +
                          "Expected: \"SET_LED_R\" got \"" + string_array[2] + "\"")

    except socket.error:
        print 'socket error'
        connection.close()


def main():
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        server_socket.bind(('', 4592))
        print 'Socket bind complete'
    except socket.error as msg:
        print "Bind failed\r\n"
        print msg
        sys.exit()
    server_socket.listen(5)

    # now keep talking with the client
    try:
        while 1:
            # wait to accept a connection - blocking call
            connection, address = server_socket.accept()
            print 'Connected with ' + address[0] + ':' + str(address[1])
            thread.start_new(connection_handler, (connection,))

    except KeyboardInterrupt:
        print "Received Interrupt"
        server_socket.close()


if __name__ == "__main__":
    main()
